export declare function bit(n: number, mask: number): number;
export declare function camelCase(s: string): string;
export declare function contains(exp: string, o: string): boolean;
export declare function debounce(func: Function, wait: number): any;
export declare function endsWith(exp: string, o: string): boolean;
export declare function exact(exp: string, o: string): boolean;
export declare function exactMatch(exp: string, o: string): boolean;
export declare function exp(base: number, result): number;
export declare function findItem(items: any[], obj: object | string, prop?: string): any;
export declare function hasOwnProperty(o: any, prop: any): boolean;
export declare function indexsOf(arr: any[], value: string | number): number[];
export declare function init(obj: any, prop: any, value?: any): any;
export declare function isArray(o: any): boolean;
export declare function isArrayWithLength(o: any): boolean;
export declare function isBitOff(n: number, mask: number): boolean;
export declare function isBitOn(n: number, mask: number): boolean;
export declare function isBoolean(o: any): boolean;
export declare function isBrowser(): boolean;
export declare function isChromeBrowser(): boolean;
export declare function isDate(o: any): boolean;
export declare function isDateObject(o: any): boolean;
export declare function isDecimal(value: number): boolean;
export declare function isDefined(o: any): boolean;
export declare function isEmpty(o: any): boolean;
export declare function isEnum(e: any, o: any): boolean;
export declare function isFalse(o: any): boolean;
export declare function isFunction(f: any): boolean;
export declare function isIOS(): boolean;
export declare function isLTR(): boolean;
export declare function isNull(o: any): boolean;
export declare function isNullOrUndefined(o: any): boolean;
export declare function isNumber(value: any): boolean;
export declare function isObject(o: any): boolean;
export declare function isPowerOf2(n: number): boolean;
export declare function isSafariBrowser(): boolean;
export declare function isString(o: any): boolean;
export declare function isStringWithLength(o: any): boolean;
export declare function isTrue(o: any): boolean;
export declare function isUndefined(o: any): boolean;
export declare function isWithin24Hours(o: Date): boolean;
export declare function parseDate(o: any): any;
export declare function parseObject(obj: any, path: string, delimeter?: string): undefined | string;
export declare function replaceKeyValueWithString(o: any, obj: object): any;
export declare function setBitOff(n: number, mask: number): number;
export declare function setBitOn(n: number, mask: number): number;
export declare function startsWith(exp: string, o: string): boolean;
export declare function throttle(func: Function, wait: number): any;
export declare function toBinary(n: number): string;
export declare function toConstant(enumeration: any, key: string): any;
export declare function toDate(o: any): any;
export declare function toggleBit(n: number, mask: number): number;
export declare function wordCount(s: string): number;

//export declare function quickSortFilterOrder(a: any, b: any): number;

declare const _default: {
  bit: (n: number, mask: number) => number;
  camelCase: (s: string) => string;
  contains: (exp: string, o: string) => boolean;
  debounce: (func: Function, wait: number) => any;
  endsWith: (exp: string, o: string) => boolean;
  exact: (exp: string, o: string) => boolean;
  exactMatch: (exp: string, o: string) => boolean;
  exp: (base: number, result: number) => number;
  findItem: (items: any[], obj: object | string, prop?: string) => any;
  hasOwnProperty: (o: any, prop: any) => boolean;
  indexsOf: (arr: any[], value: string | number) => number[]
  init: (obj: any, prop: any, value?: any) => any;
  isArray: (o: any) => boolean;
  isArrayWithLength: (o: any) => boolean;
  isBitOff: (n: number, mask: number) => boolean;
  isBitOn: (n: number, mask: number) => boolean;
  isBoolean: (o: any) => boolean;
  isBrowser: () => boolean;
  isChromeBrowser: () => boolean;
  isDate: (o: any) => boolean;
  isDateObject: (o: any) => boolean;
  isDecimal: (value: number) => boolean;
  isDefined: (o: any) => boolean;
  isEmail: (o: any) => boolean;
  isEmpty: (o: any) => boolean;
  isEnum: (e: any, o: any) => boolean;
  isFalse: (o: any) => boolean;
  isFunction: (f: any) => boolean;
  isIOS: () => boolean;
  isLTR: () => boolean;
  isNull: (o: any) => boolean;
  isNullOrUndefined: (o: any) => boolean;
  isNumber: (value: any) => boolean;
  isObject: (o: any) => boolean;
  isPowerOf2: (n: number) => boolean;
  isSafariBrowser: () => boolean;
  isString: (o: any) => boolean;
  isStringWithLength: (o: any) => boolean;
  isTrue: (o: any) => boolean;
  isUndefined: (o: any) => boolean;
  isWithin24Hours: (o: Date) => boolean;
  parseDate: (o: any) => any;
  parseObject: (obj: any, path: string, delimeter?: string) => undefined | string | number;
  replace(o: string, regexp: any, replace: string): string;
  replaceKeyValueWithString: (o: any, obj: Object) => any;
  setBitOff: (n: number, mask: number) => number;
  setBitOn: (n: number, mask: number) => number;
  startsWith: (exp: string, o: string) => boolean;
  throttle: (func: Function, wait: number) => any;
  toBinary: (n: number) => string;
  toConstant: (enumeration: any, key: string) => any;
  toDate: (o: any) => any;
  toggleBit: (n: number, mask: number) => number;
  wordCount: (s: string) => number;
};

export default _default;
